name: Publish Release
on:
  workflow_dispatch:
jobs:
  publish-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Setup Gradle Caches
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Setup Gradle Wrapper
        run: chmod +x gradlew

      - name: Get Version and Platform
        id: properties
        uses: christian-draeger/read-properties@1.1.1
        with:
          path: "./gradle.properties"
          properties: "version enabledPlatforms minecraftVersion"

      - name: Publish Release
        run: ./gradlew publish --info
        env:
          MAVEN_USER: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASS: ${{ secrets.MAVEN_PASSWORD }}

      - name: Upload NeoForge Artifacts
        if: contains(steps.properties.outputs.enabledPlatforms, 'neoforge')
        uses: actions/upload-artifact@v3
        with:
          name: neoforge-artifacts
          path: ./neoforge/build/libs/!(*-@(dev|sources|dev-shadow)).jar

      - name: Upload Fabric Artifacts
        if: contains(steps.properties.outputs.enabledPlatforms, 'fabric')
        uses: actions/upload-artifact@v3
        with:
          name: fabric-artifacts
          path: ./fabric/build/libs/!(*-@(dev|sources|dev-shadow)).jar

#      - name: Generate Discord Embed
#        run: ./gradlew injectEmbed
#        env:
#          FORGE_RELEASE_URL: ${{ steps.forge_release.outputs.modrinth-version }}
#          FABRIC_RELEASE_URL: ${{ steps.fabric_release.outputs.modrinth-version }}
#
#      - name: Upload Discord Embed
#        uses: tsickert/discord-webhook@v5.3.0
#        with:
#          webhook-url: ${{ secrets.WEBHOOK_URL }}
#          raw-data: ./build/embed.json
#
